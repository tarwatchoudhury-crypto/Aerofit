name: Build Android AAB
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Install dependencies
        run: npm install --legacy-peer-deps
      
      - name: Install Expo CLI
        run: npm install -g @expo/cli
        
      - name: Prebuild Android
        run: npx expo prebuild --platform android --clean
        
      - name: Force update all gradle files to API 35
        run: |
          # Update all occurrences in all gradle files
          find android -type f \( -name "*.gradle" -o -name "*.gradle.kts" \) -exec sed -i 's/compileSdk[[:space:]]*=[[:space:]]*34/compileSdk = 35/g' {} +
          find android -type f \( -name "*.gradle" -o -name "*.gradle.kts" \) -exec sed -i 's/targetSdk[[:space:]]*=[[:space:]]*34/targetSdk = 35/g' {} +
          find android -type f \( -name "*.gradle" -o -name "*.gradle.kts" \) -exec sed -i 's/compileSdkVersion[[:space:]]*34/compileSdkVersion 35/g' {} +
          find android -type f \( -name "*.gradle" -o -name "*.gradle.kts" \) -exec sed -i 's/targetSdkVersion[[:space:]]*34/targetSdkVersion 35/g' {} +
          find android -type f \( -name "*.gradle" -o -name "*.gradle.kts" \) -exec sed -i 's/compileSdkVersion(34)/compileSdkVersion(35)/g' {} +
          find android -type f \( -name "*.gradle" -o -name "*.gradle.kts" \) -exec sed -i 's/targetSdkVersion(34)/targetSdkVersion(35)/g' {} +
          
      - name: Verify API level changes
        run: |
          echo "=== Checking for remaining API 34 references ==="
          grep -r "compileSdk.*34\|targetSdk.*34" android/ || echo "No API 34 found - good!"
          echo "=== Showing API 35 references ==="
          grep -r "compileSdk.*35\|targetSdk.*35" android/ || echo "Warning: No API 35 found!"
        
      - name: Decode keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/aerofit-release.keystore
            
      - name: Configure signing
        run: |
          cat >> android/app/build.gradle << 'GRADLE'
          
          android.buildTypes.release.signingConfig = android.signingConfigs.create("release") {
              storeFile file('aerofit-release.keystore')
              storePassword '${{ secrets.KEYSTORE_PASSWORD }}'
              keyAlias '${{ secrets.KEY_ALIAS }}'
              keyPassword '${{ secrets.KEYSTORE_PASSWORD }}'
          }
          GRADLE
        
      - name: Build AAB
        working-directory: android
        run: |
          chmod +x gradlew
          ./gradlew bundleRelease --no-daemon
          
      - uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: android/app/build/outputs/bundle/release/app-release.aab
